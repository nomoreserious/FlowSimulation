<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpftk="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions"
                    xmlns:wpftkcnv="clr-namespace:WPFExtensions.Converters;assembly=WPFExtensions">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation To="Gainsboro" Storyboard.TargetName="BrBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.07" />
                                        <ColorAnimation To="Gainsboro" Storyboard.TargetName="Br1Brush" Storyboard.TargetProperty="Color" Duration="0:0:0.07" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation To="White" Storyboard.TargetName="BrBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.07" />
                                        <ColorAnimation To="White" Storyboard.TargetName="Br1Brush" Storyboard.TargetProperty="Color" Duration="0:0:0.07" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Width="20" Height="20" Background="#01000000">
                            <Path Width="10" Height="10" Data="M 0,0 L 10,10" StrokeThickness="2">
                                <Path.Stroke>
                                    <SolidColorBrush x:Name="BrBrush" Color="Gainsboro"/>
                                </Path.Stroke>
                            </Path>
                            <Path Width="10" Height="10" Data="M 0,10 L 10,0" StrokeThickness="2">
                                <Path.Stroke>
                                    <SolidColorBrush x:Name="Br1Brush" Color="Gainsboro"/>
                                </Path.Stroke>
                            </Path>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <wpftkcnv:DoubleToLog10Converter x:Key="log10Converter"/>
    <wpftkcnv:EqualityToBooleanConverter x:Key="equalityConverter"/>

    <Style TargetType="{x:Type wpftk:ZoomControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type wpftk:ZoomControl}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                ClipToBounds="{TemplateBinding ClipToBounds}">
                            <wpftk:ZoomContentPresenter x:Name="PART_Presenter"
                                                           ClipToBounds="False" />
                        </Border>
                        <Canvas>

                            <!-- Controls -->
                            <Border Padding="5"
                                    CornerRadius="5"
                                    Background="#88C0C0C0"
                                    Canvas.Left="20"
                                    Canvas.Top="20"
                                    ToolTipService.InitialShowDelay="0">
                                <Border.ToolTip>
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock><Run FontWeight="Bold">CTRL + Колесо мыши:</Run> Изменение масштаба</TextBlock>
                                        <TextBlock><Run FontWeight="Bold">ALT + Перетаскивание:</Run> Перемещение по элементу</TextBlock>
                                        <TextBlock><Run FontWeight="Bold">SHIFT + Перетаскивание:</Run> Позиционирование по элементу</TextBlock>
                                    </StackPanel>
                                </Border.ToolTip>
                                <StackPanel Orientation="Vertical">
                                    <Slider Height="150"
                                            Minimum="{TemplateBinding MinZoom,Converter={StaticResource log10Converter}}"
                                            Maximum="{TemplateBinding MaxZoom,Converter={StaticResource log10Converter}}"
                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Zoom,Mode=TwoWay,Converter={StaticResource log10Converter}}"
                                            HorizontalAlignment="Center"
                                            Ticks="0.1, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 2"
                                            AutoToolTipPlacement="BottomRight"
                                            AutoToolTipPrecision="1"
                                            TickPlacement="BottomRight"
                                            TickFrequency="1"
                                            LargeChange="1"
                                            SmallChange="0.1"
                                            Orientation="Vertical" />
                                    <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Zoom,StringFormat='{}{0:F2}x'}"
                                               HorizontalAlignment="Center"
                                               FontWeight="Bold" />
                                    <RadioButton Width="32" Height="32" GroupName="rbgZoomMode" Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" ToolTip="Оригинальный размер"
                                                 IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Mode,Converter={StaticResource equalityConverter},ConverterParameter={x:Static wpftk:ZoomControlModes.Original}}">
                                        <TextBlock Text="1:1" FontWeight="Bold" FontSize="18"/>
                                    </RadioButton>
                                    <RadioButton Width="32" Height="32" GroupName="rbgZoomMode" Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" ToolTip="На весь экран"
                                                 IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Mode,Converter={StaticResource equalityConverter},ConverterParameter={x:Static wpftk:ZoomControlModes.Fill}}" >
                                        <Image Source="/FlowSimulation;component/Images/fullscreen.png" />
                                    </RadioButton>
                                </StackPanel>
                            </Border>

                            <!-- ZoomBox -->
                            <Border BorderBrush="{TemplateBinding ZoomBoxBorderBrush}"
                                    BorderThickness="{TemplateBinding ZoomBoxBorderThickness}"
                                    Canvas.Left="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomBox.X}"
                                    Canvas.Top="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomBox.Y}"
                                    Opacity="{TemplateBinding ZoomBoxOpacity}"
                                    Background="{TemplateBinding ZoomBoxBackground}"
                                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomBox.Width}"
                                    Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomBox.Height}" />
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="White" />
        <Setter Property="ZoomBoxBackground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.0, 0.0" EndPoint="1.0, 1.0">
                    <GradientStop Color="Silver" Offset="0.0" />
                    <GradientStop Color="DarkGray" Offset="1.0" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="ZoomBoxBorderBrush" Value="Black" />
        <Setter Property="ZoomBoxBorderThickness" Value="1" />
        <Setter Property="ClipToBounds" Value="True" />
        <Style.Triggers>
            <Trigger Property="ModifierMode" Value="Pan">
                <Setter Property="Cursor" Value="SizeAll" />
            </Trigger>
            <Trigger Property="ModifierMode" Value="ZoomBox">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
        <Setter Property="Padding" Value="10,3,3,3"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonsBaseStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="WhiteSmoke"/>
        <Setter Property="BorderBrush" Value="#ACACAC"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.CaptionFontFamilyKey}}"/>
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontStretch" Value="Medium"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5,4"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Opacity" Value="1.0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation To="#F0F0F0" Storyboard.TargetName="firstGs" Storyboard.TargetProperty="Color" Duration="0:0:0.07"/>
                                        <ColorAnimation To="#E5E5E5" Storyboard.TargetName="secondGs" Storyboard.TargetProperty="Color" Duration="0:0:0.07"/>
                                        <ColorAnimation To="#ACACAC" Storyboard.TargetName="BrBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.07" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation To="#F0F4F9" Storyboard.TargetName="firstGs" Storyboard.TargetProperty="Color" Duration="0:0:0.07"/>
                                        <ColorAnimation To="#E0ECF9" Storyboard.TargetName="secondGs" Storyboard.TargetProperty="Color" Duration="0:0:0.07"/>
                                        <ColorAnimation To="#7EB4EA" Storyboard.TargetName="BrBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.07" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation To="#DBEDFD" Storyboard.TargetName="firstGs" Storyboard.TargetProperty="Color" Duration="0:0:0.05"/>
                                        <ColorAnimation To="#C4E0FC" Storyboard.TargetName="secondGs" Storyboard.TargetProperty="Color" Duration="0:0:0.05"/>
                                        <ColorAnimation To="#569DE5" Storyboard.TargetName="BrBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.05" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation To="#EFEFEF" Storyboard.TargetName="firstGs" Storyboard.TargetProperty="Color" Duration="0:0:0"/>
                                        <ColorAnimation To="#EFEFEF" Storyboard.TargetName="secondGs" Storyboard.TargetProperty="Color" Duration="0:0:0"/>
                                        <ColorAnimation To="#D9D9D9" Storyboard.TargetName="BrBrush" Storyboard.TargetProperty="Color" Duration="0:0:0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ColorAnimation To="#DBEDFD" Storyboard.TargetName="firstGs" Storyboard.TargetProperty="Color" Duration="0:0:0"/>
                                        <ColorAnimation To="#C4E0FC" Storyboard.TargetName="secondGs" Storyboard.TargetProperty="Color" Duration="0:0:0"/>
                                        <ColorAnimation To="#569DE5" Storyboard.TargetName="BrBrush" Storyboard.TargetProperty="Color" Duration="0:0:0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Chrome" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border.BorderBrush>
                                <SolidColorBrush x:Name="BrBrush" Color="#ACACAC" />
                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop x:Name="firstGs" Color="#F0F0F0" Offset="0"/>
                                    <GradientStop x:Name="secondGs" Color="#E5E5E5" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.2"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ButtonsBaseStyle}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonsBaseStyle}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
    </Style>

    <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Padding" Value="2,4,2,5"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BackgroudBrush}"/>
        <Setter Property="Background" Value="{DynamicResource Accent2ColorBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="MaxHeight" Value="42"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock TextWrapping="Wrap" TextTrimming="CharacterEllipsis" FontWeight="SemiBold" Text="{Binding Path=.}" Foreground="{DynamicResource AccentForegroundBrush}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="RowBackground" Value="{DynamicResource BackgroudBrush}"/>

        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="HeadersVisibility" Value="Column"/>

        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGridColumnHeaderStyle}"/>
    </Style>

    <Style TargetType="ToolTip">
        <Setter Property="Background" Value="{DynamicResource LightBackgroundBrush}"/>
    </Style>

    <Style TargetType="ToolBar">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="White" Offset="0" />
                    <GradientStop Color="WhiteSmoke" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0,1,1,1"/>
        <Setter Property="Padding" Value="2,1"/>
    </Style>

    <Style TargetType="ToolBarTray" BasedOn="{StaticResource {x:Type ToolBarTray}}">
        <Setter Property="Background" Value="{DynamicResource DarkBackgroundBrush}"/>
    </Style>
    
    <Style TargetType="GroupBox">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <DockPanel>
                        <TextBlock DockPanel.Dock="Top" Padding="5,3" 
                                   Background="{TemplateBinding BorderBrush}" 
                                   Foreground="White" 
                                   FontWeight="SemiBold" TextTrimming="CharacterEllipsis" 
                                   ToolTip="{TemplateBinding Header}" Text="{TemplateBinding Header}"/>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0.5,0,0.5,0.5">
                            <ContentPresenter Content="{TemplateBinding Content}"/>
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>