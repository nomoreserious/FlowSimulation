<Window x:Class="FlowSimulation.View.MainWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:wpfEx="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions"
             xmlns:syspar="clr-namespace:System.Windows;assembly=PresentationFramework"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" d:DesignHeight="235" d:DesignWidth="621" 
             FontFamily="Microsoft Sans Serif" FontSize="12" WindowStartupLocation="CenterScreen">
    <Window.Style>
        <Style TargetType="Window">
            <Setter Property="WindowStyle" Value="SingleBorderWindow"/>
            <Setter Property="ResizeMode" Value="CanResize"/>

            <Setter Property="Width" Value="800"/>
            <Setter Property="Height" Value="600"/>
            <Style.Triggers>
                <!--<DataTrigger Binding="{Binding Path=UseFullScreenMode,Mode=OneWay}" Value="False">
                    <Setter Property="WindowStyle" Value="SingleBorderWindow"/>
                    <Setter Property="ResizeMode" Value="CanResize"/>
                    <Setter Property="Top" Value="0"/>
                    <Setter Property="Left" Value="0"/>
                    <Setter Property="Width" Value="800"/>
                    <Setter Property="Height" Value="600"/>
                </DataTrigger>-->
                <DataTrigger Binding="{Binding Path=UseFullScreenMode,Mode=OneWay}" Value="True">
                    <Setter Property="WindowStyle" Value="None"/>
                    <Setter Property="ResizeMode" Value="NoResize"/>
                    <Setter Property="Window.Top" Value="0"/>
                    <Setter Property="Window.Left" Value="0"/>
                    <Setter Property="Window.Width" Value="{x:Static SystemParameters.PrimaryScreenWidth}"/>
                    <Setter Property="Window.Height" Value="{x:Static SystemParameters.PrimaryScreenHeight}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
        <Window.Resources>
            <LinearGradientBrush x:Key="UncheckedBrush" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#99BCDBD1" Offset="0" />
                <GradientStop Color="#99A6CACA" Offset="1" />
                <GradientStop Color="#9971A696" Offset="0.492" />
                <GradientStop Color="#998BCCD1" Offset="0.475" />
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="MouseOverBrush" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFBCDBD1" Offset="0" />
                <GradientStop Color="#FFA6CACA" Offset="1" />
                <GradientStop Color="#FF71A696" Offset="0.492" />
                <GradientStop Color="#FF8BCCD1" Offset="0.475" />
            </LinearGradientBrush>

        

    </Window.Resources>

        <Grid Background="Silver">

            <Grid.RowDefinitions>
                <RowDefinition Height="20" />
                <RowDefinition Height="40" />
                <RowDefinition Height="100*" />
                <RowDefinition Height="25" />
            </Grid.RowDefinitions>

            <Menu>
                <MenuItem Header="Файл">
                    <!--<MenuItem Header="Новый сценарий" Command="{Binding Path=NewCommand}"></MenuItem>-->
                    <MenuItem Header="Открыть сценарий" Command="{Binding Path=OpenCommand}"></MenuItem>
                    <!--<MenuItem  Header="Сохранить сценарий как..." Command="{Binding Path=SaveCommand}" CommandParameter="1" IsEnabled="{Binding ElementName=menuEnableVariator,Path=IsEnabled}"></MenuItem>
                    <MenuItem Header="Сохранить сценарий" Command="{Binding Path=SaveCommand}" CommandParameter="0" IsEnabled="{Binding ElementName=menuEnableVariator,Path=IsEnabled}"></MenuItem>-->
                    <Separator/>
                    <!--<MenuItem Header="Сохранить изображение с карты" IsEnabled="{Binding ElementName=menuEnableVariator,Path=IsEnabled}" ></MenuItem>
                    <MenuItem Header="Печать изображения с карты" IsEnabled="{Binding ElementName=menuEnableVariator,Path=IsEnabled}"></MenuItem>
                    <Separator/>-->
                    <MenuItem Header="На весь экран" IsCheckable="True" IsChecked="{Binding Path=UseFullScreenMode,Mode=TwoWay}"></MenuItem>
                    <Separator/>
                    <MenuItem Header="Выход" Command="Close" />
                </MenuItem>
            <!--<MenuItem Header="Карта" IsEnabled="{Binding ElementName=menuEnableVariator,Path=IsEnabled}">
                    <MenuItem Header="Загрузить карту" Command="{Binding Path=LoadMapFromSVGFileCommand}"></MenuItem>
                    <MenuItem Header="Загрузить фоновое изображение" Click="MenuItem_Click"></MenuItem>
                    <Separator></Separator>
                    <MenuItem Header="Показывать стены" IsCheckable="True" IsChecked="{Binding Path=ShowWalls}"></MenuItem>
                    <MenuItem Header="Показывать фоновое изображение" IsCheckable="True" IsChecked="{Binding Path=ShowBackgroundImage}"></MenuItem>
                    <MenuItem Header="Показывать клеточную маску" IsCheckable="True" IsChecked="{Binding Path=ShowMapMask}"></MenuItem>
                </MenuItem>-->
                <!--<MenuItem Header="Агенты" IsEnabled="{Binding ElementName=menuEnableVariator,Path=IsEnabled}">
                    <MenuItem Header="Создать группу агентов" Click="MenuItem_Click"></MenuItem>
                    <MenuItem Header="Править группу агентов" Click="MenuItem_Click"></MenuItem>
                    <Separator></Separator>
                    <MenuItem Header="Использовать визуализацию агентов" IsCheckable="True" IsChecked="{Binding Path=UseAgentVisual}"></MenuItem>
                    <MenuItem Header="Использовать анимацию движения" IsCheckable="True" IsChecked="{Binding Path=UseAnimation}"></MenuItem>
                </MenuItem>
                <MenuItem Header="Сервисы" IsEnabled="{Binding ElementName=menuEnableVariator,Path=IsEnabled}">
                    <MenuItem Header="Создать сервис" Click="MenuItem_Click"></MenuItem>
                    <MenuItem Header="Править сервис" Click="MenuItem_Click"></MenuItem>
                </MenuItem>
                <MenuItem Header="Сценарий" IsEnabled="{Binding ElementName=menuEnableVariator,Path=IsEnabled}">
                    <MenuItem Header="Настройка эксперимента" Click="MenuItem_Click"></MenuItem>
                    <MenuItem Header="Править дорожную сеть" Click="MenuItem_Click"></MenuItem>
                </MenuItem>
                <MenuItem Header="Анализ и статистика" Name="menuEnableVariator">
                    <MenuItem Header="Просмотреть статистику" Click="MenuItem_Click"></MenuItem>
                    <MenuItem Header="Сохранить результаты анализа" Click="MenuItem_Click"></MenuItem>
                </MenuItem>-->
            </Menu>

            <ToolBar Grid.Row="1" IsEnabled="{Binding ElementName=menuEnableVariator,Path=IsEnabled}">
                <ToolBar.Resources>

                    <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type ToggleButton}}" x:Key="Toggle">
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="FontSize" Value="24"/>
                        <Setter Property="Foreground" Value="#773B3C7C"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RadioButton}">
                                    <Border BorderThickness="1.5" BorderBrush="DimGray" CornerRadius="5" Background="Transparent">
                                        <ContentPresenter Height="30" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFBCDBD1" Offset="0" />
                                            <GradientStop Color="#FFA6CACA" Offset="1" />
                                            <GradientStop Color="#FF71A696" Offset="0.492" />
                                            <GradientStop Color="#FF8BCCD1" Offset="0.475" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
                        <Setter Property="Background" Value="{StaticResource ResourceKey=UncheckedBrush}"/>
                        <Setter Property="CornerRadius" Value="5"></Setter>
                        <Setter Property="BorderBrush" Value="DimGray"></Setter>
                        <Setter Property="BorderThickness" Value="1.5"></Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource ResourceKey=MouseOverBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <ControlTemplate TargetType="{x:Type Button}" x:Key="ButtonsTemlate">
                        <Border Style="{StaticResource ResourceKey=BorderStyle}">
                            <ContentPresenter Height="30" Width="30" Content="{TemplateBinding Content}"/>
                        </Border>
                    </ControlTemplate>

                    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="ToggleButtonsTemlate">
                        <Border Style="{StaticResource ResourceKey=BorderStyle}">
                            <ContentPresenter Height="30" Width="30" Content="{TemplateBinding Content}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ToggleButton.IsChecked" Value="False">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <Path Fill="#FF3B3C7C" Data="M 10,4 22,15 10,26 10,4"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <Path Fill="#FF3B3C7C" Data="M 13,4 13,26 8,26 8,4 13,4 18,4 23,4 23,26 18,26 18,4"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </ToolBar.Resources>

                <Button Width="36" Height="36" Margin="2,0" Template="{StaticResource ResourceKey=ButtonsTemlate}" Command="{Binding Path=StopCommand}">
                    <Path Fill="#FF3B3C7C" Data="M 4,16 15,5 26,16 4,16 4,20 4,24 26,24 26,20 4,20"/>
                </Button>

                <Button Width="36" Height="36" Margin="2,0" Template="{StaticResource ResourceKey=ButtonsTemlate}" Command="{Binding Path=SlowerCommand}">
                    <Path Fill="#FF3B3C7C" Data="M 12,15 24,26 24,4 12,15 12,6 4,15 12,24"/>
                </Button>

                <ToggleButton Width="36" Height="36" Margin="2,0" Template="{StaticResource ResourceKey=ToggleButtonsTemlate}" Command="{Binding Path=StartCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsChecked}"/>

                <Button Width="36" Height="36" Margin="2,0" Template="{StaticResource ResourceKey=ButtonsTemlate}" Command="{Binding Path=FasterCommand}">
                    <Path Fill="#FF3B3C7C" Data="M 18,15 6,26 6,4 18,15 18,6 26,15 18,24"/>
                </Button>

                <Rectangle Width="1" Fill="Gray" Margin="3,0" ></Rectangle>

                <RadioButton Width="36" Height="36" Margin="2,0" Style="{StaticResource Toggle}" Content="2D"/>

                <!--<RadioButton Width="36" Height="36" Margin="2,0" Style="{StaticResource Toggle}" Content="3D" IsChecked="{Binding Path=Use3D,Mode=TwoWay}"/>-->
            </ToolBar>

        <wpfEx:ZoomControl Grid.Row="2" MinZoom="0.3" MaxZoom="20" >
            <ListBox ItemsSource="{Binding Path=Agents,Mode=OneWay}">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Width="{Binding Path=Width,Mode=OneWay}" 
                                Height="{Binding Path=Height,Mode=OneWay}" 
                                Background="{Binding Path=Background,Mode=OneWay}"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
        </wpfEx:ZoomControl>
            
            <DockPanel Grid.Row="3" Background="Gainsboro" >

                <!--<DockPanel.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFE4E4E4" Offset="0" />
                        <GradientStop Color="#FFB3B3B3" Offset="1" />
                        <GradientStop Color="#FFCBCBCB" Offset="0.6" />
                        <GradientStop Color="#FFD7D7D7" Offset="0.5" />
                    </LinearGradientBrush>
                </DockPanel.Background>-->
                <Path DockPanel.Dock="Left" Margin="3,0" Stroke="Black" Width="16" Height="16" Data="M 8,0 l 0,16 0,-8 -8,0 16,0" />
                <TextBlock DockPanel.Dock="Left" Padding="7,3" Name="lblMouseLocation" />
                <Rectangle DockPanel.Dock="Left" Margin="3,0" Stroke="Black" Grid.Column="1" Width="16" Height="14" />
                <TextBlock DockPanel.Dock="Left" Padding="7,3" Name="tbMapSize" Grid.Column="1"/>

                <TextBlock DockPanel.Dock="Left" Padding="5,3" Grid.Column="6">
                <Run>Скорость:</Run>
                <TextBlock FontWeight="Bold"  x:Name="tbSpeedRation" Text="{Binding SpeedRatio, Mode=OneWay}"></TextBlock>
                <Run FontWeight="Bold">X</Run>
            </TextBlock>
                <TextBlock DockPanel.Dock="Left" Padding="5,3" Grid.Column="5">
                <Run>Агентов на карте:</Run>
                <TextBlock FontWeight="Bold" Text="{Binding Path=AgentsCount,Mode=OneWay}"></TextBlock>
            </TextBlock>
                <TextBlock DockPanel.Dock="Right" Padding="5,3" >
                <Run>Время:</Run>
                <TextBlock FontWeight="Bold" x:Name="tbSimulationTime"></TextBlock>
            </TextBlock>
                <!--<Rectangle   Fill="DarkGray" Grid.Column="6" Width="2" />-->
                <!--<Rectangle HorizontalAlignment="Left" Fill="DarkGray" Grid.Column="1" Width="2" />-->
                <!--<Rectangle HorizontalAlignment="Left" Fill="DarkGray" Grid.Column="2" Width="2" />-->
                <TextBlock Grid.Column="3" Padding="5,3">
                <Run>Benchmark:</Run>
                <TextBlock FontWeight="Bold" x:Name="tbBenchmark" ></TextBlock>
            </TextBlock>
            </DockPanel>

        </Grid>

</Window>
