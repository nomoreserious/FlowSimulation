<wnd:MetroWindow x:Class="FlowSimulation.View.ConfigWindows.ServiceConfigWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:wpfex="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions"
                 xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                 xmlns:cnvrt="clr-namespace:FlowSimulation.Converters"
                 xmlns:wnd="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                 xmlns:cvb="clr-namespace:FlowSimulation.Helpers.MVVM;assembly=FlowSimulation.Helpers"
                 xmlns:acb="clr-namespace:FlowSimulation.Helpers.AttachedCommandBehavior;assembly=FlowSimulation.Helpers"
                 Height="508" Width="428" WindowStartupLocation="CenterOwner" Title="Редактирование сервисов"
                 cvb:CloseViewBehavior.CloseView="{Binding Path=CloseView}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/ResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <cnvrt:StringToBrushConverter x:Key="StringToBrushConvertor"/>

            <CollectionViewSource x:Key="servicesCVS" Source="{Binding Path=ServicesOnMap,Mode=OneWay}">
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="TypeName"/>
                </CollectionViewSource.GroupDescriptions>
            </CollectionViewSource>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="220" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
       
        <GroupBox Header="Сервисы">
            <DockPanel>
                <ToolBarTray DockPanel.Dock="Top">
                    <ToolBar Height="32">
                        <Button Padding="0" ToolTip="Добавить" Command="{Binding Path=AddServiceCommand,Mode=OneTime}">
                            <Image Source="/FlowSimulation;component/Images/add_row.png" />
                        </Button>
                        <Button Padding="0" ToolTip="Удалить" Command="{Binding Path=RemoveServiceCommand,Mode=OneTime}">
                            <Image Source="/FlowSimulation;component/Images/delete_row.png" />
                        </Button>
                        <Button Padding="0" ToolTip="Дублировать" >
                            <Image Source="/FlowSimulation;component/Custom.ico" />
                        </Button>
                    </ToolBar>
                </ToolBarTray>
                <ListBox HorizontalContentAlignment="Stretch" ItemsSource="{Binding Path=ServicesOnMap,Mode=OneWay}" SelectedItem="{Binding Path=SelectedService,Mode=TwoWay}">
                    <!--<ListBox.GroupStyle>
                        <GroupStyle HidesIfEmpty="True" AlternationCount="1">
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <Expander Header="{Binding Path=Name}" IsExpanded="True">
                                        <ItemsPresenter/>
                                    </Expander>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </ListBox.GroupStyle>-->
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <DockPanel>
                                <Image Height="20" DockPanel.Dock="Left" Source="/FlowSimulation;component/Custom.ico" />
                                <TextBlock VerticalAlignment="Center" TextTrimming="CharacterEllipsis" Text="{Binding Path=Name}" ToolTip="{Binding Path=Name}"/>
                            </DockPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </DockPanel>
        </GroupBox>
        
        <GroupBox Grid.Column="1" Margin="0,5,5,5" Header="Настройки сервиса">
            <ContentPresenter Content="{Binding Path=ConfigControl,Mode=OneWay}"/>
        </GroupBox>
        <!--<GroupBox Grid.Column="1" Header="Карта">
            <GroupBox.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
            </GroupBox.Resources>
            
            <wpfex:ZoomControl x:Name="zoom">
                <ListBox SelectedItem="{Binding Path=SelectedService,Mode=TwoWay}">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="Canvas.Left" Value="{Binding Path=X,Mode=TwoWay}" />
                            <Setter Property="Canvas.Top" Value="{Binding Path=Y,Mode=TwoWay}" />
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas x:Name="canvas"
                                Width="{Binding Path=Width,Mode=OneWay}" 
                                Height="{Binding Path=Height,Mode=OneWay}" 
                                Background="{Binding Path=Background,Mode=OneWay}">
                                <acb:CommandBehaviorCollection.Behaviors>
                                    <acb:BehaviorBinding Event="PreviewMouseLeftButtonDown" 
                                        Command="{Binding Path=MouseLeftButtonDownCommand, Mode=OneTime}" 
                                        CommandParameter="{Binding ElementName=canvas}"/>
                                    <acb:BehaviorBinding Event="PreviewMouseLeftButtonUp"       
                                        Command="{Binding Path=MouseLeftButtonUpCommand, Mode=OneTime}" 
                                        CommandParameter="{Binding ElementName=canvas}"/>
                                    <acb:BehaviorBinding Event="PreviewMouseMove"
                                        Command="{Binding Path=MouseMoveCommand, Mode=OneTime}" 
                                        CommandParameter="{Binding ElementName=canvas}"/>
                                </acb:CommandBehaviorCollection.Behaviors>
                            </Canvas>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Rectangle Width="{Binding Path=Width,Mode=OneWay}" Height="{Binding Path=Height,Mode=OneWay}" Fill="Fuchsia">
                                <Rectangle.Effect>
                                    <DropShadowEffect Color="Black" ShadowDepth="3" BlurRadius="3" Direction="315" />
                                </Rectangle.Effect>
                            </Rectangle>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </wpfex:ZoomControl>
        </GroupBox>-->

        <DockPanel Grid.Row="2" Grid.ColumnSpan="2">
            <Button DockPanel.Dock="Right" Content="Отмена" Width="100" Margin="5,0,5,5" Padding="2" IsCancel="True"/>
            <Button DockPanel.Dock="Right" Content="Ок" Width="100" Margin="0,0,0,5" Padding="2" IsDefault="True" Command="{Binding Path=SaveCommand}"/>
            <TextBlock/>
        </DockPanel>

        <Border Grid.ColumnSpan="2" Grid.RowSpan="2" Background="#bbffffff">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsBusy,Mode=OneWay}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Padding="0,0,0,7" FontSize="14" FontWeight="SemiBold" Text="{Binding Path=BusyContent,Mode=OneWay}" TextAlignment="Center"/>
                <wnd:ProgressRing IsActive="True"/>
            </StackPanel>
        </Border>

        <xctk:ChildWindow Width="300" VerticalAlignment="Center" HorizontalAlignment="Center" Caption="Создание сервиса" Grid.ColumnSpan="2" CloseButtonVisibility="Hidden" Visibility="{Binding Path=ChildWindowVisibility,Mode=OneWay}" WindowBackground="WhiteSmoke">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Padding="5,3" VerticalAlignment="Center" Text="Имя"/>
                <TextBlock Padding="5,3" VerticalAlignment="Center" Grid.Row="1" Text="Тип"/>
                <TextBox Margin="0,5,5,5" Grid.Column="1" Text="{Binding Path=NewServiceName,UpdateSourceTrigger=PropertyChanged}"/>
                <ComboBox Margin="0,0,5,5" Grid.Column="1" Grid.Row="1" ItemsSource="{Binding Path=AvailableServices}" SelectedItem="{Binding Path=SelectedServiceType,Mode=OneWayToSource}" DisplayMemberPath="FancyName"/>
                <DockPanel Grid.Row="2" Grid.ColumnSpan="2">
                    <Button DockPanel.Dock="Right" Content="Отмена" Width="100" Margin="5,0,5,5" Padding="2" Command="{Binding Path=CancelCreatingCommand}"/>
                    <Button DockPanel.Dock="Right" Content="Создать" Width="100" Margin="0,0,0,5" Padding="2" IsDefault="True" Command="{Binding Path=CreateNewCommand}"/>
                    <TextBlock/>
                </DockPanel>
            </Grid>
        </xctk:ChildWindow>
        
    </Grid>
    </wnd:MetroWindow>
